{"version":3,"sources":["Header.js","Splash.js","About.js","Skills.js","Academics.js","Contact.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","href","gsap","registerPlugin","ScrollTrigger","Splash","props","useEffect","target","links","map","l","url","rel","name","About","id","Skills","Academics","Contact","App","social_media_links","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ce10e0df.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header() {\r\n  return (\r\n      <header className=\"App-header\">\r\n        <span className=\"App-logo\"><a href=\"/\">AV</a></span>\r\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */} \r\n        <nav className=\"App-nav\">\r\n          <ul>\r\n            <li><a href=\"/#About\">About</a></li>\r\n            <li><a href=\"/#Skills\">Skills</a></li>\r\n            <li><a href=\"/#Academics\">Academics</a></li>\r\n            <li><a href=\"/#Contact\">Contact</a></li>\r\n          </ul>\r\n        </nav>\r\n        {/* <span className=\"cv-link line-before\"><a href=\"/#\">Download CV</a></span> */}\r\n        \r\n      </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport { gsap } from 'gsap';\r\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\r\ngsap.registerPlugin(ScrollTrigger);\r\n\r\nconst Splash = (props) => {\r\n    useEffect(() => {\r\n      // TweenMax.to(test.current, {\r\n      // scrollTrigger: test.current, // start the animation when \".box\" enters the viewport (once)\r\n      // x: 500\r\n    // });\r\n\r\n    // const scene = gsap.timeline();\r\n    // scene.set('.splash', {backgroundColor: 'transparent'})\r\n    // scene.fromTo('.splash .splash-content .tag', 0.3, {x: -50, opacity: 0}, {x: 0, opacity: 1})\r\n    // scene.fromTo('.splash .splash-content h1', 0.3, {y: 50, opacity: 0}, {y: 0, opacity: 1})\r\n    // scene.fromTo('.splash .splash-content .content', 0.3, {y: 50, opacity: 0}, {y: 0, opacity: 1})\r\n\r\n        // ScrollTrigger.create({\r\n            // animation: scene,\r\n            // trigger: '.splash',\r\n            // start: \"top top\",\r\n            // end: \"bottom 0\",\r\n            // markers: true,\r\n            // pin: true,\r\n        // });\r\n    });\r\n\r\n\r\n    return (\r\n        <section className=\"splash dark App-section\">\r\n          <div className=\"splash-content container\">\r\n              <div className=\"section-heading\">\r\n                <span className=\"tag line-before\">Adam Vorkel</span>\r\n                <h1>Full-Stack <br/>Developer</h1>\r\n              </div>\r\n              \r\n              <div className=\"content line-before\">\r\n                <p>Full-stack developer, software engineer, all-round tech enthusiast.</p>\r\n              </div>\r\n          </div>\r\n          \r\n          <div className=\"splash-footer container\">\r\n              <div className=\"hire-me\">\r\n                <span className=\"tag line-before\">Available for Hire</span>\r\n                <p className=\"resume-link\"><a href=\"/downloads/resume.pdf\" target=\"_blank\">View my resume</a></p>\r\n              </div>\r\n              <div className=\"social-links\">\r\n            <ul>\r\n              {props.links.map(l => (<li><a href={l.url} target=\"_blank\" rel=\"noopener noreferrer\">{l.name}</a></li>))}\r\n            </ul>\r\n          </div>\r\n          </div>\r\n          <span className=\"scroll-prompt line-before long\">\r\n            Scroll\r\n          </span>\r\n          \r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Splash;","import React, { useRef, useEffect } from \"react\";\r\nimport { gsap } from 'gsap';\r\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\r\n\r\nconst About = () => {\r\n\r\n    useEffect(() => {\r\n        // const scroll_scene = gsap.timeline();\r\n        // scroll_scene\r\n          // .to('.App-background ', .3, {backgroundColor: '#ffffff'}, 0)\r\n          // .to('.splash ', .3, {opacity: 0}, 0)\r\n          // .fromTo('.about .tag ', .3, {opacity: 0, y: -100}, {opacity: 1, y: 0}, 0)\r\n          // .fromTo('.about .big-text ', .3, {opacity: 0, y: 100}, {opacity: 1, y: 0}, 0)\r\n          // .fromTo('.about .section-heading ', .3, {opacity: 0, x: -100}, {opacity: 1, x: 0})\r\n          // .fromTo('.about .story ', .3, {opacity: 0, x: 100}, {opacity: 1, x: 0});\r\n        // scroll_scene.fromTo('.App-background', {backgroundColor: '#111111'}, {backgroundColor: '#ffffff'})\r\n        // ScrollTrigger.create({\r\n        //     animation: scroll_scene,\r\n        //     trigger: '.App-background',\r\n        //     start: \"top top\",\r\n        //     end: \"+=100%\",\r\n        //     markers: true,\r\n        //     scrub: true\r\n        // });\r\n        // ScrollTrigger.create({\r\n            // animation: scroll_scene,\r\n            // trigger: '.about',\r\n            // start: \"50% 80%\",\r\n            // end: \"+=100%\",\r\n            // toggleActions: \"play pause resume reverse\",\r\n            // markers: true,\r\n        // });\r\n      });\r\n\r\n    return (\r\n        <section id=\"About\" className=\"about App-section\">\r\n          <div className=\"container\">\r\n            <div className=\"content\">\r\n\r\n                <span className=\"tag line-before\">About</span>\r\n\r\n                  <div className=\"section-heading\">\r\n                    <h2>Let’s Get Aquainted</h2>\r\n                  </div>\r\n                  <div className=\"details\">\r\n                        <ul>\r\n                            <li>Name: Adam Vorkel</li>\r\n                            <li>Age: 26</li>\r\n                            <li>From: Gauteng, South Africa</li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                <div className=\"big-text\">\r\n                  <p>I’m Adam, and I am a passionate software engineer and full stack developer with a boundless interest in technology and computing. </p>\r\n                </div>\r\n                <div className=\"story\">\r\n                    <p>I’ve always been fascinated with technology, specifically computers. As a kid I spent countless hours playing around on the family PC, or opening up electronics (even though I couldn’t always put them back together).</p>\r\n                    <p>Years later, after deciding to learn my first programming language, PHP, an undertaking that although seemed daunting, filled me with wonder and excitement, I realized that I was meant for a career in development.</p>\r\n                    <p>In 2015 I decided to formally study computer science to better acquaint me with the discipline and give me means to gain a footing in the field professionaly, so I enrolled at UNISA (the University of South Africa) and began my Bsc in Computing, which I completed in 2020.</p>\r\n                </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\n\r\nconst Skills = () => { \r\n    return (\r\n        <section id=\"Skills\" className=\"skills App-section\">\r\n            <div className=\"container\">\r\n                <div className=\"content\">\r\n                    <div className=\"section-heading\">\r\n                        <span className=\"tag line-before\">Skills</span>\r\n                        <h2>What I Can Do</h2>\r\n                    </div>\r\n                    <div className=\"skill-cards\">\r\n                        <div className=\"skill-card\">\r\n                            <h3>Back End</h3>\r\n                            <ul>\r\n                                <li>Node.js</li>\r\n                                <li>Python</li>\r\n                                <li>PHP, Wordpress</li>\r\n                                <li>C# and .NET Core</li>\r\n                                <li>Databases (SQL, MongoDB)</li>\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"skill-card\">\r\n                            <h3>Front End</h3>\r\n                            <ul>\r\n                                <li>HTML(5)</li>\r\n                                <li>CSS(3)</li>\r\n                                <li>Javascript &amp; DOM</li>\r\n                                <li>React, Redux</li>\r\n                                <li>Bootstrap</li>\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"skill-card\">\r\n                            <h3>Tooling</h3>\r\n                            <ul>\r\n                                <li>Docker</li>\r\n                                <li>Basic Linux Admin</li>\r\n                                <li>Bash Shell</li>\r\n                                <li>Git</li>\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"skill-card\">\r\n                            <h3>Other Interests</h3>\r\n                            <ul>\r\n                                <li>Machine learning Deep learning (Keras &amp; Tensorflow)</li>\r\n                                <li>Blockchain technology</li>\r\n                                <li>Operating Systems</li>\r\n                                <li>Open source software</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Skills;","import React from \"react\";\r\n\r\nconst Academics = (props) => {\r\n    return (\r\n        <section id=\"Academics\" className=\"academics App-section\">\r\n          <div className=\"container\">\r\n            <div className=\"content\">\r\n              \r\n                <div className=\"section-heading\">\r\n                  <span className=\"tag line-before\">Academics</span>\r\n                  <h2>My CS Degree</h2>\r\n                </div>\r\n                .\r\n\r\n\r\n                <div className=\"info\">\r\n                  <p>I obtained my computer science degree, a BSc in Computing, from the University of South Africa (UNISA).</p>\r\n                  <p><b>2015 - 2020 | Course Code 98906</b></p>\r\n                </div>\r\n\r\n            </div>\r\n          </div>\r\n        </section>\r\n    )\r\n};\r\n\r\nexport default Academics;","import React from \"react\";\r\n\r\nconst Contact = (props) => {\r\n    return (\r\n        <section id=\"Contact\" className=\"contact dark App-section\">\r\n          <div className=\"container\">\r\n            <div className=\"content\">\r\n              <div className=\"section-heading\">\r\n                {/* <span className=\"tag line-before\">Contact</span> */}\r\n                <h2>Let's Get in Touch</h2>\r\n              </div>\r\n              <div className=\"details\">\r\n                <p>If you’re interested in getting in touch, feel free to contact me at any time.</p>\r\n                <ul>\r\n                  <li>082 465 3228</li>\r\n                  <li><a href=\"mailto:adamvorkel@gmail.com\">adamvorkel@gmail.com</a></li>\r\n                </ul>\r\n              </div>\r\n              <div className=\"social-media-links\">\r\n                <ul>\r\n                {props.links.map(l => (<li><a href={l.url} target=\"_blank\" rel=\"noopener noreferrer\">{l.name}</a></li>))}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n    )\r\n};\r\n\r\nexport default Contact;","import React, { useRef, useEffect } from \"react\";\r\n// import logo from './logo.svg';\r\n// import Loader from './Loader';\r\nimport Header from './Header';\r\nimport Splash from './Splash';\r\nimport About from './About';\r\nimport Skills from './Skills';\r\nimport Academics from './Academics';\r\nimport Contact from './Contact';\r\nimport './App.css';\r\n\r\n// gsap stuff\r\n// import { TimelineMax, gsap } from 'gsap';\r\n// import { ScrollTrigger } from \"gsap/ScrollTrigger\";\r\n// gsap.registerPlugin(ScrollTrigger);\r\n\r\nfunction App() {\r\n\r\n  const social_media_links = [\r\n    { name: 'Github', url: 'https://github.com/adamvorkel' },\r\n    { name: 'Linkedin', url: 'https://www.linkedin.com/in/adamvorkel/' },\r\n    { name: 'Facebook', url: 'https://www.facebook.com/adam.vorkel/' }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    // const scroll_scene = new TimelineMax();\r\n    // gsap.set('.App-section', { backgroundColor: 'transparent' });\r\n    // scroll_scene\r\n      // .fromTo('.App-background', .3, {backgroundColor: '#111111'}, {backgroundColor: '#ffffff'});\r\n    // scroll_scene.fromTo('.App-background', {backgroundColor: '#111111'}, {backgroundColor: '#ffffff'})\r\n    // ScrollTrigger.create({\r\n    //     animation: scroll_scene,\r\n    //     trigger: '.App-background',\r\n    //     start: \"top top\",\r\n    //     end: \"+=100%\",\r\n    //     markers: true,\r\n    //     scrub: true\r\n    // });\r\n    // ScrollTrigger.create({\r\n    //     animation: scroll_scene,\r\n    //     trigger: '.about',\r\n    //     start: \"top 50%\",\r\n    //     end: \"+=100%\",\r\n    //     toggleActions: \"play pause resume reverse\",\r\n    //     markers: true,\r\n    // });\r\n  });\r\n\r\n  return (\r\n    \r\n    <div className=\"App\">\r\n      {/* <div className=\"App-background\"></div> */}\r\n      {/* <Loader /> */}\r\n      <Header />\r\n      <Splash links={social_media_links} />\r\n      <About />\r\n      <Skills />\r\n      <Academics />\r\n      <Contact links={social_media_links} /> \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}