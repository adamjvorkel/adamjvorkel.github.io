{"version":3,"sources":["Header.js","Splash.js","About.js","Skills.js","Academics.js","Contact.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","href","gsap","registerPlugin","ScrollTrigger","Splash","props","useEffect","target","links","map","l","url","rel","name","About","id","Skills","Academics","Contact","App","social_media_links","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+PAqBeA,MAnBf,WACE,OACI,4BAAQC,UAAU,cAChB,0BAAMA,UAAU,YAAW,uBAAGC,KAAK,KAAR,OAE3B,yBAAKD,UAAU,WACb,4BACE,4BAAI,uBAAGC,KAAK,WAAR,UACJ,4BAAI,uBAAGA,KAAK,YAAR,WACJ,4BAAI,uBAAGA,KAAK,eAAR,cACJ,4BAAI,uBAAGA,KAAK,aAAR,gB,cCThBC,IAAKC,eAAeC,KAEpB,IAwDeC,EAxDA,SAACC,GAwBZ,OAvBAC,qBAAU,eAwBN,6BAASP,UAAU,2BACjB,yBAAKA,UAAU,4BACX,yBAAKA,UAAU,mBACb,0BAAMA,UAAU,mBAAhB,eACA,0CAAe,6BAAf,cAGF,yBAAKA,UAAU,uBACb,oGAIN,yBAAKA,UAAU,2BACX,yBAAKA,UAAU,WACb,0BAAMA,UAAU,mBAAhB,sBACA,uBAAGA,UAAU,eAAc,uBAAGC,KAAK,wBAAwBO,OAAO,UAAvC,oBAE7B,yBAAKR,UAAU,gBACjB,4BACGM,EAAMG,MAAMC,KAAI,SAAAC,GAAC,OAAK,4BAAI,uBAAGV,KAAMU,EAAEC,IAAKJ,OAAO,SAASK,IAAI,uBAAuBF,EAAEG,aAI5F,0BAAMd,UAAU,kCAAhB,YCaKe,EA9DD,WA8BV,OA5BAR,qBAAU,eA6BN,6BAASS,GAAG,QAAQhB,UAAU,qBAC5B,yBAAKA,UAAU,aACb,yBAAKA,UAAU,WAEX,0BAAMA,UAAU,mBAAhB,SAEE,yBAAKA,UAAU,mBACb,yDAEF,yBAAKA,UAAU,WACT,4BACI,iDACA,uCACA,6DAIZ,yBAAKA,UAAU,YACb,0KAEF,yBAAKA,UAAU,SACX,iQACA,oPACA,oTCDLiB,EAvDA,WACX,OACI,6BAASD,GAAG,SAAShB,UAAU,sBAC3B,yBAAKA,UAAU,aACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,mBACX,0BAAMA,UAAU,mBAAhB,UACA,8CAEJ,yBAAKA,UAAU,eACX,yBAAKA,UAAU,cACX,wCACA,4BACI,uCACA,sCACA,8CACA,gDACA,0DAGR,yBAAKA,UAAU,cACX,yCACA,4BACI,uCACA,sCACA,gDACA,4CACA,2CAGR,yBAAKA,UAAU,cACX,uCACA,4BACI,sCACA,iDACA,0CACA,qCAGR,yBAAKA,UAAU,cACX,+CACA,4BACI,mFACA,qDACA,iDACA,2DCrBjBkB,EAxBG,SAACZ,GACf,OACI,6BAASU,GAAG,YAAYhB,UAAU,yBAChC,yBAAKA,UAAU,aACb,yBAAKA,UAAU,WAEX,yBAAKA,UAAU,mBACb,0BAAMA,UAAU,mBAAhB,aACA,6CAJN,IASI,yBAAKA,UAAU,QACb,sIACA,2BAAG,oECYNmB,EA3BC,SAACb,GACb,OACI,6BAASU,GAAG,UAAUhB,UAAU,4BAC9B,yBAAKA,UAAU,aACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,mBAEb,mDAEF,yBAAKA,UAAU,WACb,kHACA,4BACE,4CACA,4BAAI,uBAAGC,KAAK,+BAAR,2BAGR,yBAAKD,UAAU,sBACb,4BACCM,EAAMG,MAAMC,KAAI,SAAAC,GAAC,OAAK,4BAAI,uBAAGV,KAAMU,EAAEC,IAAKJ,OAAO,SAASK,IAAI,uBAAuBF,EAAEG,gB,MC2CzFM,MA/Cf,WAEE,IAAMC,EAAqB,CACzB,CAAEP,KAAM,SAAUF,IAAK,iCACvB,CAAEE,KAAM,WAAYF,IAAK,2CACzB,CAAEE,KAAM,WAAYF,IAAK,0CA2B3B,OAxBAL,qBAAU,eA0BR,yBAAKP,UAAU,OAGb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAQS,MAAOY,IACf,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CAASZ,MAAOY,MC9CFC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.ce10e0df.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header() {\n  return (\n      <header className=\"App-header\">\n        <span className=\"App-logo\"><a href=\"/\">AV</a></span>\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */} \n        <nav className=\"App-nav\">\n          <ul>\n            <li><a href=\"/#About\">About</a></li>\n            <li><a href=\"/#Skills\">Skills</a></li>\n            <li><a href=\"/#Academics\">Academics</a></li>\n            <li><a href=\"/#Contact\">Contact</a></li>\n          </ul>\n        </nav>\n        {/* <span className=\"cv-link line-before\"><a href=\"/#\">Download CV</a></span> */}\n        \n      </header>\n  );\n}\n\nexport default Header;\n","import React, { useRef, useEffect } from \"react\";\nimport { gsap } from 'gsap';\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\ngsap.registerPlugin(ScrollTrigger);\n\nconst Splash = (props) => {\n    useEffect(() => {\n      // TweenMax.to(test.current, {\n      // scrollTrigger: test.current, // start the animation when \".box\" enters the viewport (once)\n      // x: 500\n    // });\n\n    // const scene = gsap.timeline();\n    // scene.set('.splash', {backgroundColor: 'transparent'})\n    // scene.fromTo('.splash .splash-content .tag', 0.3, {x: -50, opacity: 0}, {x: 0, opacity: 1})\n    // scene.fromTo('.splash .splash-content h1', 0.3, {y: 50, opacity: 0}, {y: 0, opacity: 1})\n    // scene.fromTo('.splash .splash-content .content', 0.3, {y: 50, opacity: 0}, {y: 0, opacity: 1})\n\n        // ScrollTrigger.create({\n            // animation: scene,\n            // trigger: '.splash',\n            // start: \"top top\",\n            // end: \"bottom 0\",\n            // markers: true,\n            // pin: true,\n        // });\n    });\n\n\n    return (\n        <section className=\"splash dark App-section\">\n          <div className=\"splash-content container\">\n              <div className=\"section-heading\">\n                <span className=\"tag line-before\">Adam Vorkel</span>\n                <h1>Full-Stack <br/>Developer</h1>\n              </div>\n              \n              <div className=\"content line-before\">\n                <p>Full-stack developer, software engineer, all-round tech enthusiast.</p>\n              </div>\n          </div>\n          \n          <div className=\"splash-footer container\">\n              <div className=\"hire-me\">\n                <span className=\"tag line-before\">Available for Hire</span>\n                <p className=\"resume-link\"><a href=\"/downloads/resume.pdf\" target=\"_blank\">View my resume</a></p>\n              </div>\n              <div className=\"social-links\">\n            <ul>\n              {props.links.map(l => (<li><a href={l.url} target=\"_blank\" rel=\"noopener noreferrer\">{l.name}</a></li>))}\n            </ul>\n          </div>\n          </div>\n          <span className=\"scroll-prompt line-before long\">\n            Scroll\n          </span>\n          \n        </section>\n    )\n}\n\nexport default Splash;","import React, { useRef, useEffect } from \"react\";\nimport { gsap } from 'gsap';\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\n\nconst About = () => {\n\n    useEffect(() => {\n        // const scroll_scene = gsap.timeline();\n        // scroll_scene\n          // .to('.App-background ', .3, {backgroundColor: '#ffffff'}, 0)\n          // .to('.splash ', .3, {opacity: 0}, 0)\n          // .fromTo('.about .tag ', .3, {opacity: 0, y: -100}, {opacity: 1, y: 0}, 0)\n          // .fromTo('.about .big-text ', .3, {opacity: 0, y: 100}, {opacity: 1, y: 0}, 0)\n          // .fromTo('.about .section-heading ', .3, {opacity: 0, x: -100}, {opacity: 1, x: 0})\n          // .fromTo('.about .story ', .3, {opacity: 0, x: 100}, {opacity: 1, x: 0});\n        // scroll_scene.fromTo('.App-background', {backgroundColor: '#111111'}, {backgroundColor: '#ffffff'})\n        // ScrollTrigger.create({\n        //     animation: scroll_scene,\n        //     trigger: '.App-background',\n        //     start: \"top top\",\n        //     end: \"+=100%\",\n        //     markers: true,\n        //     scrub: true\n        // });\n        // ScrollTrigger.create({\n            // animation: scroll_scene,\n            // trigger: '.about',\n            // start: \"50% 80%\",\n            // end: \"+=100%\",\n            // toggleActions: \"play pause resume reverse\",\n            // markers: true,\n        // });\n      });\n\n    return (\n        <section id=\"About\" className=\"about App-section\">\n          <div className=\"container\">\n            <div className=\"content\">\n\n                <span className=\"tag line-before\">About</span>\n\n                  <div className=\"section-heading\">\n                    <h2>Let’s Get Aquainted</h2>\n                  </div>\n                  <div className=\"details\">\n                        <ul>\n                            <li>Name: Adam Vorkel</li>\n                            <li>Age: 26</li>\n                            <li>From: Gauteng, South Africa</li>\n                        </ul>\n                    </div>\n\n                <div className=\"big-text\">\n                  <p>I’m Adam, and I am a passionate software engineer and full stack developer with a boundless interest in technology and computing. </p>\n                </div>\n                <div className=\"story\">\n                    <p>I’ve always been fascinated with technology, specifically computers. As a kid I spent countless hours playing around on the family PC, or opening up electronics (even though I couldn’t always put them back together).</p>\n                    <p>Years later, after deciding to learn my first programming language, PHP, an undertaking that although seemed daunting, filled me with wonder and excitement, I realized that I was meant for a career in development.</p>\n                    <p>In 2015 I decided to formally study computer science to better acquaint me with the discipline and give me means to gain a footing in the field professionaly, so I enrolled at UNISA (the University of South Africa) and began my Bsc in Computing, which I completed in 2020.</p>\n                </div>\n            </div>\n          </div>\n        </section>\n    )\n}\n\nexport default About;","import React from \"react\";\n\nconst Skills = () => { \n    return (\n        <section id=\"Skills\" className=\"skills App-section\">\n            <div className=\"container\">\n                <div className=\"content\">\n                    <div className=\"section-heading\">\n                        <span className=\"tag line-before\">Skills</span>\n                        <h2>What I Can Do</h2>\n                    </div>\n                    <div className=\"skill-cards\">\n                        <div className=\"skill-card\">\n                            <h3>Back End</h3>\n                            <ul>\n                                <li>Node.js</li>\n                                <li>Python</li>\n                                <li>PHP, Wordpress</li>\n                                <li>C# and .NET Core</li>\n                                <li>Databases (SQL, MongoDB)</li>\n                            </ul>\n                        </div>\n                        <div className=\"skill-card\">\n                            <h3>Front End</h3>\n                            <ul>\n                                <li>HTML(5)</li>\n                                <li>CSS(3)</li>\n                                <li>Javascript &amp; DOM</li>\n                                <li>React, Redux</li>\n                                <li>Bootstrap</li>\n                            </ul>\n                        </div>\n                        <div className=\"skill-card\">\n                            <h3>Tooling</h3>\n                            <ul>\n                                <li>Docker</li>\n                                <li>Basic Linux Admin</li>\n                                <li>Bash Shell</li>\n                                <li>Git</li>\n                            </ul>\n                        </div>\n                        <div className=\"skill-card\">\n                            <h3>Other Interests</h3>\n                            <ul>\n                                <li>Machine learning Deep learning (Keras &amp; Tensorflow)</li>\n                                <li>Blockchain technology</li>\n                                <li>Operating Systems</li>\n                                <li>Open source software</li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n};\n\nexport default Skills;","import React from \"react\";\n\nconst Academics = (props) => {\n    return (\n        <section id=\"Academics\" className=\"academics App-section\">\n          <div className=\"container\">\n            <div className=\"content\">\n              \n                <div className=\"section-heading\">\n                  <span className=\"tag line-before\">Academics</span>\n                  <h2>My CS Degree</h2>\n                </div>\n                .\n\n\n                <div className=\"info\">\n                  <p>I obtained my computer science degree, a BSc in Computing, from the University of South Africa (UNISA).</p>\n                  <p><b>2015 - 2020 | Course Code 98906</b></p>\n                </div>\n\n            </div>\n          </div>\n        </section>\n    )\n};\n\nexport default Academics;","import React from \"react\";\n\nconst Contact = (props) => {\n    return (\n        <section id=\"Contact\" className=\"contact dark App-section\">\n          <div className=\"container\">\n            <div className=\"content\">\n              <div className=\"section-heading\">\n                {/* <span className=\"tag line-before\">Contact</span> */}\n                <h2>Let's Get in Touch</h2>\n              </div>\n              <div className=\"details\">\n                <p>If you’re interested in getting in touch, feel free to contact me at any time.</p>\n                <ul>\n                  <li>082 465 3228</li>\n                  <li><a href=\"mailto:adamvorkel@gmail.com\">adamvorkel@gmail.com</a></li>\n                </ul>\n              </div>\n              <div className=\"social-media-links\">\n                <ul>\n                {props.links.map(l => (<li><a href={l.url} target=\"_blank\" rel=\"noopener noreferrer\">{l.name}</a></li>))}\n                </ul>\n              </div>\n            </div>\n          </div>\n        </section>\n    )\n};\n\nexport default Contact;","import React, { useRef, useEffect } from \"react\";\n// import logo from './logo.svg';\n// import Loader from './Loader';\nimport Header from './Header';\nimport Splash from './Splash';\nimport About from './About';\nimport Skills from './Skills';\nimport Academics from './Academics';\nimport Contact from './Contact';\nimport './App.css';\n\n// gsap stuff\n// import { TimelineMax, gsap } from 'gsap';\n// import { ScrollTrigger } from \"gsap/ScrollTrigger\";\n// gsap.registerPlugin(ScrollTrigger);\n\nfunction App() {\n\n  const social_media_links = [\n    { name: 'Github', url: 'https://github.com/adamvorkel' },\n    { name: 'Linkedin', url: 'https://www.linkedin.com/in/adamvorkel/' },\n    { name: 'Facebook', url: 'https://www.facebook.com/adam.vorkel/' }\n  ];\n\n  useEffect(() => {\n    // const scroll_scene = new TimelineMax();\n    // gsap.set('.App-section', { backgroundColor: 'transparent' });\n    // scroll_scene\n      // .fromTo('.App-background', .3, {backgroundColor: '#111111'}, {backgroundColor: '#ffffff'});\n    // scroll_scene.fromTo('.App-background', {backgroundColor: '#111111'}, {backgroundColor: '#ffffff'})\n    // ScrollTrigger.create({\n    //     animation: scroll_scene,\n    //     trigger: '.App-background',\n    //     start: \"top top\",\n    //     end: \"+=100%\",\n    //     markers: true,\n    //     scrub: true\n    // });\n    // ScrollTrigger.create({\n    //     animation: scroll_scene,\n    //     trigger: '.about',\n    //     start: \"top 50%\",\n    //     end: \"+=100%\",\n    //     toggleActions: \"play pause resume reverse\",\n    //     markers: true,\n    // });\n  });\n\n  return (\n    \n    <div className=\"App\">\n      {/* <div className=\"App-background\"></div> */}\n      {/* <Loader /> */}\n      <Header />\n      <Splash links={social_media_links} />\n      <About />\n      <Skills />\n      <Academics />\n      <Contact links={social_media_links} /> \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}